# -*- coding: utf-8 -*-
"""RealEstatePlantUML.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oYSo1b_V2OK0A2ccFCroKoN0rKpKU3v5
"""

!apt-get install graphviz -y
!wget https://sourceforge.net/projects/plantuml/files/plantuml.jar/download -O plantuml.jar
!pip install plantuml
from plantuml import PlantUML
import os

!java -jar plantuml.jar -tpng asset_flow.puml

# Install PlantUML dependencies (once per session)
!apt-get install -qq graphviz openjdk-17-jre
!pip install -q plantuml
!wget -q https://sourceforge.net/projects/plantuml/files/plantuml.jar/download -O plantuml.jar

# Updated PlantUML diagram
plantuml_code = """
@startuml

title REIT Data Flow â€“ MSBA Capstone

skinparam shadowing false
skinparam linetype ortho
skinparam defaultTextAlignment center
skinparam backgroundColor white
skinparam ArrowColor black
skinparam ranksep 50
skinparam nodesep 40
skinparam package {
    BorderColor black
    BackgroundColor<<Input>> #f3f3f3
    BackgroundColor<<Python>> #d9e8fb
    BackgroundColor<<Database>> #fff9d6
    BackgroundColor<<Qualitative>> #e6f7e6
}

left to right direction

' Input sources
package "Input Sources" <<Input>> {
    [RE_Tickers.csv]
    [Yahoo Finance API]
    [NAREIT Scraper]
}

' Python scripts
package "Python Scripts" <<Python>> {
    [SM.py]
    [HD.py]
    [PP.py]
    [BP.py]
    [BGI.py]
    [BC.py]
    [PM.py]
    [PGI.py]
    [PBA.py]
}

' Snowflake tables
package "Snowflake Tables" <<Database>> {
    [SECURITY_MASTER]
    [HOLDINGS]
    [PORTFOLIOPERFORMANCE]
    [BENCHMARKPERFORMANCE]
    [BENCHMARKGENERALINFO]
    [PRODUCTMASTER]
    [PORTFOLIOGENERALINFORMATION]
    [PORTFOLIOBENCHMARKASSOCIATION]
}

' Qualitative outputs (single location)
package "Qualitative Outputs" <<Qualitative>> {
    [Manager_Commentary.xlsx]
    [Disclosures.xlsx]
}

' Main pipeline flows
[RE_Tickers.csv] --> [SM.py]
[SM.py] --> [SECURITY_MASTER]

[Yahoo Finance API] --> [HD.py]
[SECURITY_MASTER] --> [HD.py]
[HD.py] --> [HOLDINGS]

[HOLDINGS] --> [PP.py]
[Yahoo Finance API] --> [PP.py]
[PP.py] --> [PORTFOLIOPERFORMANCE]
[PP.py] --> [Manager_Commentary.xlsx]
[PP.py] --> [Disclosures.xlsx]

[Yahoo Finance API] --> [BP.py]
[BP.py] --> [BENCHMARKPERFORMANCE]

[Yahoo Finance API] --> [BGI.py]
[BGI.py] --> [BENCHMARKGENERALINFO]

[Yahoo Finance API] --> [BC.py]
[BC.py] --> [BENCHMARKGENERALINFO]

[PM.py] --> [PRODUCTMASTER]

[NAREIT Scraper] --> [PGI.py]
[PGI.py] --> [PORTFOLIOGENERALINFORMATION]

[PBA.py] --> [PORTFOLIOBENCHMARKASSOCIATION]
[PORTFOLIOGENERALINFORMATION] --> [PBA.py]
[BENCHMARKGENERALINFO] --> [PBA.py]

@enduml
"""

# Save and render diagram
with open("reit_diagram_updated.puml", "w") as f:
    f.write(plantuml_code)

!java -jar plantuml.jar -tpng reit_diagram_updated.puml

from IPython.display import Image
Image("reit_diagram_updated.png")

